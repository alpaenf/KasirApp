package com.example.kasir

import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.widget.TextView
import androidx.recyclerview.widget.RecyclerView
import java.text.NumberFormat
import java.text.SimpleDateFormat
import java.util.Date
import java.util.Locale

class TransactionAdapter(
    private val transactions: List<Transaction>
) : RecyclerView.Adapter<TransactionAdapter.TransactionViewHolder>() {

    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): TransactionViewHolder {
        val view = LayoutInflater.from(parent.context).inflate(R.layout.item_transaction, parent, false)
        return TransactionViewHolder(view)
    }

    override fun onBindViewHolder(holder: TransactionViewHolder, position: Int) {
        val transaction = transactions[position]
        holder.bind(transaction)
    }

    override fun getItemCount(): Int = transactions.size

    fun updateData(newTransactions: List<Transaction>) {
        (transactions as MutableList).clear()
        transactions.addAll(newTransactions)
        notifyDataSetChanged()
    }

    inner class TransactionViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) {
        private val tvTransactionId: TextView = itemView.findViewById(R.id.tvTransactionId)
        private val tvTransactionTime: TextView = itemView.findViewById(R.id.tvTransactionTime)
        private val tvTransactionTotal: TextView = itemView.findViewById(R.id.tvTransactionTotal)
        private val tvTransactionPaymentMethod: TextView = itemView.findViewById(R.id.tvTransactionPaymentMethod)
        private val tvTransactionItems: TextView = itemView.findViewById(R.id.tvTransactionItems)

        fun bind(transaction: Transaction) {
            tvTransactionId.text = "ID: ${transaction.id.take(8)}..."
            
            if (transaction.timestamp != null) {
                val sdf = SimpleDateFormat("dd/MM/yyyy HH:mm", Locale.getDefault())
                tvTransactionTime.text = sdf.format(transaction.timestamp)
            } else {
                tvTransactionTime.text = "Waktu tidak tersedia"
            }
            
            val formatter = NumberFormat.getCurrencyInstance(Locale("id", "ID"))
            tvTransactionTotal.text = formatter.format(transaction.totalAmount)
            tvTransactionPaymentMethod.text = "Metode: ${transaction.paymentMethod}"

            val itemsString = if (transaction.items.isNotEmpty()) {
                transaction.items.joinToString(separator = ", ") { 
                    "${it.juiceItem.name} (${it.quantity}x)" 
                }
            } else {
                "Tidak ada item"
            }
            tvTransactionItems.text = "Items: $itemsString"
        }
    }
}
